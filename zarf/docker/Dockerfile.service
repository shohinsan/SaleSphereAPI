# Build the Go Binary.
FROM golang:1.22 as build_sales-api
ENV CGO_ENABLED 0
ARG BUILD_REF

# Create the service directory and the copy the module files first and then
# download the dependencies. If this doesn't change, we won't need to do this
# again in future builds.
# RUN mkdir /service
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Copy the source code into the container.
COPY . /salesphereapi

# Build the admin binary.
WORKDIR /salesphereapi/app/tooling/sales-admin
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Build the service binary.
WORKDIR /salesphereapi/app/services/sales-api
RUN go build -ldflags "-X main.build=${BUILD_REF}"


# Run the Go Binary in Alpine.
FROM alpine:3.19
ARG BUILD_DATE
ARG BUILD_REF
RUN addgroup -g 1000 -S sales && \
    adduser -u 1000 -h /salesphereapi -G sales -S sales
COPY --from=build_sales-api --chown=sales:sales /salesphereapi/zarf/keys/. /salesphereapi/zarf/keys/.
COPY --from=build_sales-api --chown=sales:sales /salesphereapi/app/tooling/sales-admin/sales-admin /salesphereapi/sales-admin
COPY --from=build_sales-api --chown=sales:sales /salesphereapi/app/services/sales-api/sales-api /salesphereapi/sales-api
WORKDIR /salesphereapi
USER sales
CMD ["./sales-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="sales-api" \
      org.opencontainers.image.authors="Shohin Abdulkhamidov <abd.shohin@gmail.com>" \
      org.opencontainers.image.source="https://github.com/shohinsan/SaleSphereAPI/tree/master/app/services/sales-api" \
      org.opencontainers.image.revision="${BUILD_REF}" \
      org.opencontainers.image.vendor="Insidious Labs"